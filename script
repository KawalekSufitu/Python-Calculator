import tkinter as tk

class Main:

    def __init__(self):
        self.window = tk.Tk()

        self.window.geometry("300x400")
        self.window.minsize(height=400, width=300)
        self.window.maxsize(height=400, width=1000)

        self.window.title("Python Calculator")

        self.textbox = tk.Text(self.window,height=1, font = ("UNISPACE", 30),bg="#292929", fg="#9c9c9c")
        self.textbox.config(state=tk.DISABLED)
        self.textbox.pack()

        self.button_frame = tk.Frame(self.window)

        self.button_frame.columnconfigure(0, weight=1)
        self.button_frame.columnconfigure(1, weight=1)
        self.button_frame.columnconfigure(2, weight=1)
        self.button_frame.columnconfigure(3, weight=1)

        self.button1 = tk.Button(self.button_frame, text="1",font=("UNISPACE",20),bg="#292929", fg="#9c9c9c",activebackground="#ababab", command= lambda: [self.del_on_press(),self.on_press(1)])
        self.button1.grid(row=0, column=0, sticky="NESW")
        self.button2 = tk.Button(self.button_frame, text="2",font=("UNISPACE",20),bg="#292929", fg="#9c9c9c",activebackground="#ababab", command= lambda : [self.del_on_press(),self.on_press(2)])
        self.button2.grid(row=0, column=1, sticky="NESW")
        self.button3 = tk.Button(self.button_frame, text="3",font=("UNISPACE",20),bg="#292929", fg="#9c9c9c",activebackground="#ababab", command= lambda : [self.del_on_press(),self.on_press(3)])
        self.button3.grid(row=0, column=2, sticky="NESW")
        self.button4 = tk.Button(self.button_frame, text="4",font=("UNISPACE",20),bg="#292929", fg="#9c9c9c",activebackground="#ababab", command= lambda : [self.del_on_press(),self.on_press(4)])
        self.button4.grid(row=1, column=0, sticky="NESW")
        self.button5 = tk.Button(self.button_frame, text="5",font=("UNISPACE",20),bg="#292929", fg="#9c9c9c",activebackground="#ababab", command= lambda : [self.del_on_press(),self.on_press(5)])
        self.button5.grid(row=1, column=1, sticky="NESW")
        self.button6 = tk.Button(self.button_frame, text="6",font=("UNISPACE",20),bg="#292929", fg="#9c9c9c",activebackground="#ababab", command= lambda : [self.del_on_press(),self.on_press(6)])
        self.button6.grid(row=1, column=2, sticky="NESW")
        self.button7 = tk.Button(self.button_frame, text="7",font=("UNISPACE",20),bg="#292929", fg="#9c9c9c",activebackground="#ababab", command= lambda : [self.del_on_press(),self.on_press(7)])
        self.button7.grid(row=2, column=0, sticky="NESW")
        self.button8 = tk.Button(self.button_frame, text="8",font=("UNISPACE",20),bg="#292929", fg="#9c9c9c",activebackground="#ababab", command= lambda : [self.del_on_press(),self.on_press(8)])
        self.button8.grid(row=2, column=1, sticky="NESW")
        self.button9 = tk.Button(self.button_frame, text="9",font=("UNISPACE",20),bg="#292929", fg="#9c9c9c",activebackground="#ababab", command= lambda : [self.del_on_press(),self.on_press(9)])
        self.button9.grid(row=2, column=2, sticky="NESW")
        self.button0 = tk.Button(self.button_frame, text="0",font=("UNISPACE",20),bg="#292929", fg="#9c9c9c",activebackground="#ababab", command= lambda : [self.del_on_press(),self.on_press(0)])
        self.button0.grid(row=3, column=0, sticky="NESW")
        self.button_dot = tk.Button(self.button_frame, text=".",font=("UNISPACE",20),bg="#292929", fg="#9c9c9c",activebackground="#ababab", command= lambda : [self.del_on_press(),self.on_press(".")])
        self.button_dot.grid(row=3, column=2, sticky="NESW")
        
        self.button_parent = tk.Button(self.button_frame, text="()",width=1, font=("UNISPACE",20),bg="#292929", fg="#9c9c9c",activebackground="#ababab", command= self.parent_on_press)
        self.button_parent.grid(row=3, column=1, sticky="NESW")
        
        self.button_plus = tk.Button(self.button_frame, text="+",font=("UNISPACE",20),bg="#292929", fg="#9c9c9c",activebackground="#ababab", command= lambda : self.on_press("+"))
        self.button_plus.grid(row=0, column=3, sticky="NESW")
        self.button_minus = tk.Button(self.button_frame, text="-",font=("UNISPACE",20),bg="#292929", fg="#9c9c9c",activebackground="#ababab", command= lambda : self.on_press("-"))
        self.button_minus.grid(row=1, column=3, sticky="NESW")
        self.button_divide = tk.Button(self.button_frame, text="/",font=("UNISPACE",20),bg="#292929", fg="#9c9c9c",activebackground="#ababab", command= lambda : self.on_press("/"))
        self.button_divide.grid(row=4, column=2, sticky="NESW")
        self.button_multiplication = tk.Button(self.button_frame, text="*",font=("UNISPACE",20),bg="#292929", fg="#9c9c9c",activebackground="#ababab", command= lambda : self.on_press("*"))
        self.button_multiplication.grid(row=2, column=3, sticky="NESW")
        self.button_power = tk.Button(self.button_frame, text="**",font=("UNISPACE",20),bg="#292929", fg="#9c9c9c",activebackground="#ababab", command= lambda : self.on_press("**"))
        self.button_power.grid(row=3, column=3, sticky="NESW")
        self.button_MOD = tk.Button(self.button_frame, text="MOD.",width=1, font=("UNISPACE",20),bg="#292929", fg="#9c9c9c",activebackground="#ababab", command= lambda : self.on_press("%"))
        self.button_MOD.grid(row=4, column=3, sticky="NESW")
        self.button_clear = tk.Button(self.button_frame, text="CE",width = 1, font=("UNISPACE",20),bg="#e00202", fg="#9c9c9c", command= self.clear)
        self.button_clear.grid(row=4, column=0, sticky="NESW")
        self.button_clear_last = tk.Button(self.button_frame, text="<", font=("UNISPACE",20),bg="#292929", fg="#e00202",command=self.clear_last)
        self.button_clear_last.grid(row=4, column=1, sticky="NESW")

        self.button_frame.pack(fill="x")
        
        self.button_eqs = tk.Button(self.window, text="=",font=("UNISPACE",20),bg="#292929", fg="#9c9c9c", command= self.equation)
        self.button_eqs.pack(fill="x")
       
        self.window.mainloop()
    
    def on_press(self,sign):
        self.range = range(0,10)
        self.sign = sign
        if self.sign in self.range:
            self.textbox.config(state=tk.NORMAL)
            self.textbox.insert(tk.END, sign)
            self.textbox.config(state=tk.DISABLED)
            self.var = self.textbox.get("1.0", "end-1c")
            print(self.result)
        else:
            self.result = False
            self.textbox.config(state=tk.NORMAL)
            self.textbox.insert(tk.END, sign)
            self.textbox.config(state=tk.DISABLED)
            self.var = self.textbox.get("1.0", "end-1c")
            print(self.result)

    def equation(self):
        try:
            self.result = False
            eval_var = self.textbox.get("1.0", "end-1c")
            self.textbox.config(state=tk.NORMAL)
            self.textbox.delete(1.0, tk.END)
            self.textbox.insert(tk.END, eval(eval_var))
            self.textbox.config(state=tk.DISABLED)
            self.result = True
            print(self.result)
        except SyntaxError:
            self.textbox.config(state=tk.NORMAL)
            self.textbox.delete(1.0, tk.END)
            self.textbox.insert(tk.END, "Syntax Error")
            self.textbox.config(state=tk.DISABLED)
            self.result = True
            print(self.result)
    
    def del_on_press(self):
        try:
            if self.result == True:
                self.textbox.config(state=tk.NORMAL)
                self.textbox.delete(1.0, tk.END)
                self.textbox.config(state=tk.DISABLED)
                self.result = False
                print(self.result)
        except AttributeError:
            pass
    def parent_on_press(self): 
            if "(" not in self.textbox.get("1.0", "end-1c") or self.loop == True:
                self.textbox.config(state=tk.NORMAL)
                self.textbox.insert(tk.END,"(" )
                self.textbox.config(state=tk.DISABLED)
                self.loop = False
            elif "(" in self.textbox.get("1.0", "end-1c") or self.loop == False:
                self.textbox.config(state=tk.NORMAL)
                self.textbox.insert(tk.END,")" )
                self.textbox.config(state=tk.DISABLED)
                self.loop = True
    def clear(self):
        self.textbox.config(state=tk.NORMAL)
        self.textbox.delete(1.0, tk.END)
        self.textbox.config(state=tk.DISABLED)

    def clear_last(self):
        self.textbox.config(state=tk.NORMAL)
        self.textbox.delete("end-2c", "end")
        self.textbox.config(state=tk.DISABLED)

Main()



